import java.io.BufferedReader;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.OutputStreamWriter;
import java.io.PrintWriter;
import java.net.HttpURLConnection;
import java.net.URL;
import java.net.URLConnection;
import java.nio.channels.Channels;
import java.nio.channels.FileChannel;
import java.nio.channels.ReadableByteChannel;


public class Pipe {
	
	private final String SERVER_URL = "http://ec2-52-87-214-34.compute-1.amazonaws.com/";
	
	public Pipe(){
		
	}
	
	public void download(String file, String moveTo){
		try(
				  ReadableByteChannel in=Channels.newChannel(
				    new URL(SERVER_URL + "/uploads/" + file).openStream());
				  FileChannel out=new FileOutputStream(
				    moveTo).getChannel() ) {

				  out.transferFrom(in, 0, Long.MAX_VALUE);
				} catch (IOException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				} 
	}
	
	public void upload(String file) throws Exception{
		String urlToConnect = "http://localhost:9000/upload";
		File fileToUpload = new File("C:\\Users\\joao\\Pictures\\bla.jpg");
		String boundary = Long.toHexString(System.currentTimeMillis()); // Just generate some unique random value.

		URLConnection connection = new URL(urlToConnect).openConnection();
		connection.setDoOutput(true); // This sets request method to POST.
		connection.setRequestProperty("Content-Type", "multipart/form-data; boundary=" + boundary);
		PrintWriter writer = null;
		try {
		    writer = new PrintWriter(new OutputStreamWriter(connection.getOutputStream()));
		    writer.println("--" + boundary);
		    writer.println("Content-Disposition: form-data; uploadedfile=" + file);
		    writer.println();
		    BufferedReader reader = null;
		    try {
		        reader = new BufferedReader(new InputStreamReader(new FileInputStream(fileToUpload)));
		        for (String line; (line = reader.readLine()) != null;) {
		            writer.println(line);
		        }
		    } finally {
		        if (reader != null) try { reader.close(); } catch (IOException logOrIgnore) {}
		    }
		    writer.println("--" + boundary + "--");
		} finally {
		    if (writer != null) writer.close();
		}

		// Connection is lazily executed whenever you request any status.
		int responseCode = ((HttpURLConnection) connection).getResponseCode();
		System.out.println(responseCode); // Should be 200
	}
	
	
}
